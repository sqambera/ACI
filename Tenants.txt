import json
import requests
import urllib3
import os
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

user = os.environ.get('USER')
pswd = os.environ.get('PASS')


base_url = "https://192.168.111.100/api"
login_url = f"{base_url}/aaaLogin.json"
tenant_url = f"{base_url}/class/fvTenant.json"
bd_url = f"{base_url}/node/class/fvBD.json"


def obtain_token(user, pswd):
  payload = json.dumps({
    "aaaUser": {
      "attributes": {
        "name": user,
        "pwd": pswd
      }
    }
  })

  headers = {
    'Content-Type': 'application/json',
    }

  response = requests.request("POST", login_url, headers=headers, data=payload, verify=False).json()
  token = response['imdata'][0]['aaaLogin']['attributes']['token']
  return token

def obtain_tenant(req_headers):
  tenant = requests.request("GET", tenant_url, headers=req_headers, verify=False)
  for n in range(len(tenant.json()["imdata"])):
    print(json.dumps(tenant.json()["imdata"][n]["fvTenant"]["attributes"]["name"], indent=4))

def obtain_bd(req_headers):
  bd = requests.request("GET", bd_url, headers=req_headers, verify=False).json()
  print(json.dumps(bd, indent=4))


if __name__=="__main__":
  token = obtain_token(user, pswd)

req_headers = {
  'Content-Type': 'application/json',
  'Cookie': 'APIC-cookie='+token
}

obtain_tenant(req_headers)
obtain_bd(req_headers)
